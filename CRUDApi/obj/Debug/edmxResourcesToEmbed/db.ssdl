<?xml version="1.0" encoding="utf-8"?>
<Schema Namespace="angular2Model.Store" Provider="System.Data.SqlClient" ProviderManifestToken="2012" Alias="Self" xmlns:store="http://schemas.microsoft.com/ado/2007/12/edm/EntityStoreSchemaGenerator" xmlns:customannotation="http://schemas.microsoft.com/ado/2013/11/edm/customannotation" xmlns="http://schemas.microsoft.com/ado/2009/11/edm/ssdl">
  <EntityType Name="Locations">
    <Key>
      <PropertyRef Name="ID" />
    </Key>
    <Property Name="ID" Type="int" StoreGeneratedPattern="Identity" Nullable="false" />
    <Property Name="Name" Type="nvarchar" MaxLength="50" />
  </EntityType>
  <!--Errors Found During Generation:
warning 6002: The table/view 'angular2.dbo.Patients' does not have a primary key defined. The key has been inferred and the definition was created as a read-only table/view.-->
  <EntityType Name="Patients">
    <Key>
      <PropertyRef Name="id" />
    </Key>
    <Property Name="id" Type="int" Nullable="false" />
    <Property Name="firstName" Type="nvarchar" MaxLength="50" />
    <Property Name="lastName" Type="nvarchar" MaxLength="50" />
    <Property Name="dob" Type="date" />
    <Property Name="address" Type="nvarchar(max)" />
    <Property Name="mobileNo" Type="numeric" Precision="18" Scale="0" />
    <Property Name="emailId" Type="nvarchar" MaxLength="50" />
    <Property Name="admitDate" Type="date" />
  </EntityType>
  <EntityContainer Name="angular2ModelStoreContainer">
    <EntitySet Name="Locations" EntityType="Self.Locations" Schema="dbo" store:Type="Tables" />
    <EntitySet Name="Patients" EntityType="Self.Patients" store:Type="Tables" store:Schema="dbo">
      <DefiningQuery>SELECT 
    [Patients].[id] AS [id], 
    [Patients].[firstName] AS [firstName], 
    [Patients].[lastName] AS [lastName], 
    [Patients].[dob] AS [dob], 
    [Patients].[address] AS [address], 
    [Patients].[mobileNo] AS [mobileNo], 
    [Patients].[emailId] AS [emailId], 
    [Patients].[admitDate] AS [admitDate]
    FROM [dbo].[Patients] AS [Patients]</DefiningQuery>
    </EntitySet>
  </EntityContainer>
</Schema>